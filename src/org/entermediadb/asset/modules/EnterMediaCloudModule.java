package org.entermediadb.asset.modules;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.http.StatusLine;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.entermediadb.net.HttpSharedConnection;
import org.json.simple.JSONObject;
import org.openedit.WebPageRequest;
import org.openedit.data.Searcher;
import org.openedit.profile.UserProfile;
import org.openedit.users.User;
import org.openedit.users.UserManager;

public class EnterMediaCloudModule extends BaseMediaModule
{
	private static final Log log = LogFactory.getLog(EnterMediaCloudModule.class);

	HttpSharedConnection fieldConnection;

	protected HttpSharedConnection getConnection()
	{
		//getModuleManager().getBean("searcherManager");
			//UserManager userManager = (UserManager) getModuleManager().getBean("system", "userManager");
		
//		User admin = (User)getSearcherManager().getData("system", "user", "admin");
//		String adminkey = userManager.getEnterMediaKey(admin);
			
			fieldConnection = new HttpSharedConnection();
//			fieldconnection.addSharedHeader("X-token", node.get("entermediakey"));
//			fieldconnection.addSharedHeader("X-tokentype", "entermedia");
		return fieldConnection;
	}

	//Give it a temporary key that is generated by the server and will be authenticated by the remote server as well
	public void loginUserWithExpiringKey(WebPageRequest inReq)
	{
		//createConnection
		//The adminkey will be defaulted for new sites. Once this is  used once we will want to change the login
		
		
		//TODO: Make this expire
		String userkey = inReq.getRequestParameter("entermediacloudkey");
		if(userkey == null)
		{
			log.info("No key found " + userkey);
			return;
		}
		String userid = userkey.substring(0,userkey.indexOf("md5"));
		
		//TODO: Make this configurabl
		
		
		JSONObject params = new JSONObject();
		params.put("userid",userid);
		params.put("entermedia.key",userkey); //This should be expiring
		//TODO: Make sure this user is part of this collection 
		String collectionid = inReq.getRequestParameter("collectionid");
		params.put("collectionid",collectionid);

		String base = "https://entermediadb.org/entermediadb/mediadb";
		//String base = "http://localhost:8080/entermediadb/mediadb";
		String url = base + "/services/authentication/validateuser.json";
		CloseableHttpResponse resp = getConnection().sharedPostWithJson(url, params);
		StatusLine filestatus = resp.getStatusLine();
		if (filestatus.getStatusCode() != 200)
		{
			//Problem
			log.info("URL issue " + " " + url + " with " + userkey);
		}
		JSONObject data = getConnection().parseJson(resp);
		String status = (String)data.get("status");
		if( "ok".equals(status))
		{
			UserManager userManager = (UserManager) getModuleManager().getBean("system", "userManager");
			String email = (String)data.get("email");
			
			User user = userManager.getUserByEmail(email);
			if( user == null)
			{
				user = userManager.createUser("em" + userid, null);
				user.setEmail(email);
				user.setEnabled(true);
			}
			user.setFirstName((String)data.get("firstname"));
			user.setLastName((String)data.get("lastname"));
			user.setPassword((String)data.get("password"));
			userManager.saveUser(user);

			String catalogid = inReq.findValue("catalogid");

			Searcher profilesearcher = getSearcherManager().getSearcher(catalogid, "userprofile");
			
			UserProfile userprofile = (UserProfile)profilesearcher.query().exact("userid",user.getId()).searchOne();
			if( userprofile == null)
			{
				userprofile = (UserProfile) profilesearcher.createNewData();
				userprofile.setId(user.getId());
				userprofile.setProperty("settingsgroup", "administrator"); //dependant on what what we get back from our site. On Team?
				profilesearcher.saveData(userprofile);
			}
			inReq.putSessionValue("systemuser", user);
			inReq.putSessionValue(catalogid + "user", user);
			inReq.putPageValue("user", user);
		}
		else
		{
			log.info( status + " Could not login user " + userkey);
		}
		inReq.putPageValue("status",status);		
	}

}
